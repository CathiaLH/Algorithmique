// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP _PlagiatDetect_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// cpp_to_lowercase
char cpp_to_lowercase(char c);
RcppExport SEXP _PlagiatDetect_cpp_to_lowercase(SEXP cSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< char >::type c(cSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_to_lowercase(c));
    return rcpp_result_gen;
END_RCPP
}
// delUnnecessary
std::string delUnnecessary(std::string& str);
RcppExport SEXP _PlagiatDetect_delUnnecessary(SEXP strSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string& >::type str(strSEXP);
    rcpp_result_gen = Rcpp::wrap(delUnnecessary(str));
    return rcpp_result_gen;
END_RCPP
}
// cpp_tokenizer
std::vector<std::string> cpp_tokenizer(std::string texte);
RcppExport SEXP _PlagiatDetect_cpp_tokenizer(SEXP texteSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type texte(texteSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_tokenizer(texte));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_PlagiatDetect_rcpp_hello_world", (DL_FUNC) &_PlagiatDetect_rcpp_hello_world, 0},
    {"_PlagiatDetect_cpp_to_lowercase", (DL_FUNC) &_PlagiatDetect_cpp_to_lowercase, 1},
    {"_PlagiatDetect_delUnnecessary", (DL_FUNC) &_PlagiatDetect_delUnnecessary, 1},
    {"_PlagiatDetect_cpp_tokenizer", (DL_FUNC) &_PlagiatDetect_cpp_tokenizer, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_PlagiatDetect(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
